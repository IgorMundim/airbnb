// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Loading /> should render default component 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="   h-[70vh]   flex    flex-col    justify-center    items-center    "
      >
        <span
          style="display: inherit; position: relative; width: 100px; height: 100px;"
        >
          <span
            style="position: absolute; height: 100px; width: 100px; border: thick solid red; border-radius: 50%; opacity: 1; top: 0px; left: 0px; animation-fill-mode: both; animation: react-spinners-PuffLoader-puff-1, react-spinners-PuffLoader-puff-2; animation-duration: 2s; animation-iteration-count: infinite; animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1), cubic-bezier(0.3, 0.61, 0.355, 1); animation-delay: -1s;"
          />
          <span
            style="position: absolute; height: 100px; width: 100px; border: thick solid red; border-radius: 50%; opacity: 1; top: 0px; left: 0px; animation-fill-mode: both; animation: react-spinners-PuffLoader-puff-1, react-spinners-PuffLoader-puff-2; animation-duration: 2s; animation-iteration-count: infinite; animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1), cubic-bezier(0.3, 0.61, 0.355, 1); animation-delay: 0s;"
          />
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="   h-[70vh]   flex    flex-col    justify-center    items-center    "
    >
      <span
        style="display: inherit; position: relative; width: 100px; height: 100px;"
      >
        <span
          style="position: absolute; height: 100px; width: 100px; border: thick solid red; border-radius: 50%; opacity: 1; top: 0px; left: 0px; animation-fill-mode: both; animation: react-spinners-PuffLoader-puff-1, react-spinners-PuffLoader-puff-2; animation-duration: 2s; animation-iteration-count: infinite; animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1), cubic-bezier(0.3, 0.61, 0.355, 1); animation-delay: -1s;"
        />
        <span
          style="position: absolute; height: 100px; width: 100px; border: thick solid red; border-radius: 50%; opacity: 1; top: 0px; left: 0px; animation-fill-mode: both; animation: react-spinners-PuffLoader-puff-1, react-spinners-PuffLoader-puff-2; animation-duration: 2s; animation-iteration-count: infinite; animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1), cubic-bezier(0.3, 0.61, 0.355, 1); animation-delay: 0s;"
        />
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
